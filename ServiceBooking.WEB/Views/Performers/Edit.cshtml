@using ServiceBooking.WEB.Models
@model ServiceBooking.WEB.Models.EditPerformerViewModel

@{
    string message = ViewBag.Message.ToString();

    ViewBag.Title = "Edit your profile information";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Edit", "Performers", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Name)
        
        <h3 style="margin-left: 50px;">@Model.Name</h3><br/>

        <div class="form-group">
            @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control", @value = Model.Company } })
                @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @value = Model.PhoneNumber } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Categories, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<CategoryViewModel> categories = ViewBag.Categories;
                    @Html.ValidationMessageFor(model => categories, message, new { @class = "text-danger" })
                    <br />
                    foreach (CategoryViewModel c in categories)
                    {
                        var isChecked ="";
                        if (Model.Categories.Select(m => m.Id).Contains(c.Id))
                        {
                            isChecked = "checked";
                        }

                        <input type="checkbox" id="selectedCategories" name="selectedCategories" value="@c.Id" @isChecked/> @c.Name
                        <br/>
                    }
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Info, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Info, new { htmlAttributes = new {Style = "resize: none;", @class = "form-control", @value = Model.Info } })
                @Html.ValidationMessageFor(model => model.Info, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to profile", "Details", new {id = Model.Id})
</div>
