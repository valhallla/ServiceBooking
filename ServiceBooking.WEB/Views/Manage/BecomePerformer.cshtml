@using System.Web.UI.WebControls
@using ServiceBooking.WEB.Models
@model ServiceBooking.WEB.Models.BecomePerformerViewModel

@{
    Model.Categories = new List<CategoryViewModel>();
    bool isPerformer = (bool)(Session["isPerformer"]);
    bool adminStatus = (bool)(Session["adminStatus"]);

    ViewBag.Title = "Become a performer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (isPerformer && adminStatus)
{
    <h1>Error.</h1>
    <h2>An error occurred while processing your request.</h2>
}
else
{

    <h2>@ViewBag.Title</h2>

    if (isPerformer && !adminStatus)
     {
         <h3>Your request for becoming a performer is pending confirmation</h3>
     }
     else if (adminStatus && !isPerformer)
     {
         <h3>Your request for becoming a performer has been rejected</h3>
     }

     else if (!adminStatus && !isPerformer)
     {
         using (Html.BeginForm("BecomePerformer", "Manage", null, FormMethod.Post, new {enctype = "multipart/form-data"}))
         {
             @Html.AntiForgeryToken()

             <div class="form-horizontal">
                 <h4>Add some additional information about yourself</h4>
                 <hr/>
                 @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                 <div class="form-group">
                     @Html.LabelFor(model => model.Company, htmlAttributes: new {@class = "control-label col-md-2"})
                     <div class="col-md-10">
                         @Html.EditorFor(model => model.Company, new {htmlAttributes = new {@class = "form-control custo"}})
                         @Html.ValidationMessageFor(model => model.Company, "", new {@class = "text-danger"})
                     </div>
                 </div>

                 <div class="form-group">
                     @Html.LabelFor(model => model.Info, htmlAttributes: new {@class = "control-label col-md-2"})
                     <div class="col-md-10">
                         @Html.EditorFor(model => model.Info, new {htmlAttributes = new {@class = "form-control"}})
                         @Html.ValidationMessageFor(model => model.Info, "", new {@class = "text-danger"})
                     </div>
                 </div>

                 <div class="form-group">
                     @Html.LabelFor(model => model.Categories, htmlAttributes: new {@class = "control-label col-md-2"})
                     <div class="col-md-10">
                         @{
                             List<CategoryViewModel> categories = ViewBag.Categories;
                             foreach (CategoryViewModel c in categories)
                             {
                                 <input type="checkbox" name="selectedCategories" value="@c.Id"
                                        @(Model.Categories.Contains(c) ? "checked=\"checked\"" : "")/>
                                 @c.Name
                                 <br/>
                             }
                         }
                     </div>
                 </div>

                 <div class="form-group">
                     <div class="col-md-offset-2 col-md-10">
                         <input type="submit" value="Send application" class="btn btn-default"/>
                     </div>
                 </div>
             </div>
         }
     }
}
<div>
    @Html.ActionLink("Back to Performers", "Index", "Performers")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
