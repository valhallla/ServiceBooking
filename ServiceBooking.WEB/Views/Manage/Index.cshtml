@using Microsoft.AspNet.Identity
@model ServiceBooking.WEB.Models.IndexManageViewModel
@{
    ViewBag.Title = "Manage account";
    Layout = "~/Views/Shared/_Layout.cshtml";

    bool isPerformer = (bool)(Session["isPerformer"]);
    bool adminStatus = (bool)(Session["adminStatus"]);
}

<h2>@ViewBag.Title</h2>
<hr />
<div class="row">
    <div class="col-sm-7">
        @using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-2 control-label " })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-2 control-label " })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label " })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Change password" class="btn btn-default" />
                </div>
            </div>
        }
    </div>
    <div class="col-sm-5">
        @if (!User.IsInRole("admin"))
        {
            if (!adminStatus && !isPerformer)
            {
                @Html.ActionLink("Become a performer", "BecomePerformer", "Manage", null, new { @class = "btn btn-primary btn-lg" })
            }
            if (isPerformer && !adminStatus)
            {
                <h3>Your request for becoming a performer is pending confirmation</h3>
            }
            if (adminStatus && !isPerformer)
            {
                <h3>
                    @Html.ActionLink("X", "Close", "Manage", new {tryOnceAgain = false}, new { Style = "border: none;", @class = "btn btn-default close" })
                    Your request for becoming a performer has been rejected
                </h3>
            }
            if (adminStatus && isPerformer)
            {
                @Html.ActionLink("My performer profile", "Details", "Performers", new {id = User.Identity.GetUserId<int>()}, new { @class = "btn btn-primary btn-lg" })
            }
            <br/><br/>
            @Html.ActionLink("Delete account", "DeleteAccount", "Account", null, new { @class = "btn btn-primary btn-lg" })
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
